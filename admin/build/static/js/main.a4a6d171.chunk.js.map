{"version":3,"sources":["firebaseConfig.ts","firebase.ts","pages/Resources/index.tsx","pages/Lesson/index.tsx","components/TaskMessages.tsx","components/DialogModal.tsx","components/NewMessages.tsx","redux/tasks/types.ts","redux/tasks/selectors.ts","components/TaskItem.tsx","components/TasksPending.tsx","redux/users/selectors.ts","components/TransferUsers.tsx","pages/News/index.tsx","pages/Activities/index.tsx","components/Nav.tsx","redux/tasks/actions.ts","redux/users/types.ts","redux/users/actions.ts","auth.ts","App.tsx","redux/tasks/reducer.ts","redux/users/reducer.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","apps","length","app","initializeApp","db","firestore","usersRef","collection","tasksRef","messagesRef","lessonRef","resourcesRef","AdminResources","React","useState","resources","setResources","deleteCollection","setDeleteCollection","resourcesTitle","setResourcesTitle","resourcesTitleId","setResourcesTitleId","resourcesItems","setResourcesItems","itemResources","setItemResources","collectionValue","setCollectionValue","subcollectionTitle","setSubcollectionTitle","subcollectionText","setSubcollectionText","changeSubcollectionTitle","setChangeSubcollectionTitle","changeSubcollectionText","setChangeSubcollectionText","useEffect","onSnapshot","snapshot","items","forEach","doc","objKey","key","data","push","id","title","text","className","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","style","padding","TextField","value","onChange","event","String","target","fullWidth","label","variant","Button","color","onClick","set","disabled","map","item","get","then","exists","delete","console","log","catch","error","alert","paddingBottom","marginTop","placeholder","multiline","merge","onGetResourcesItems","update","FieldValue","display","justifyContent","source","AdminLesson","lesson","setLesson","lessonNumber","setLessonNumber","newLesson","setNewLesson","lessonVideoPath","setLessonVideoPath","lessonText","setLessonText","openSnackbar","setOpenSnackbar","docs","number","videoPath","handleCloseSnackbar","reason","find","el","onGetCurrentLesson","width","InputBase","inputProps","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","Fragment","size","IconButton","aria-label","fontSize","TaskMessages","setOpen","setTaskId","newMessage","Avatar","alt","src","profilePicUrl","undefined","name","format","createdAt","toDate","taskId","messageId","startIcon","DialogModal","setValue","messagesTask","setMessagesTask","currentTask","setCurrentTask","where","orderBy","querySnapshot","onAddMessage","add","ADMIN_NAME","ADMIN_AVATAR","Date","uid","ADMIN_ID","Dialog","maxWidth","scroll","aria-labelledby","aria-describedby","DialogContent","status","href","reference","rel","decision","avatar","newMessages","rows","rowsMax","onKeyUp","shiftKey","endIcon","Icon","TasksActionsType","NewMessages","setNewMessages","position","top","backgroundColor","zIndex","selectTasksItems","state","tasks","selectTasks","TaskItem","taskCurrentUser","setUserMessages","setCurrentTaskInfo","tasksPending","valueModal","setValueModal","openModal","setOpenModal","statusTask","setStatusTask","handleCloseModal","fontWeight","paddingLeft","Badge","marginLeft","badgeContent","messages","ref","Modal","FormControl","InputLabel","htmlFor","Select","native","input","Input","arrayUnion","newTask","responseAt","TasksPending","setTasksPending","useSelector","filter","task","selectUsersItems","users","selectUsers","TransferUsers","usersNotPaid","setUsersNotPaid","usersPaid","setUsersPaid","accepted","transferUsers","Chip","displayName","email","photoURL","News","AdminActivities","userTasks","setUserTasks","userMessages","currentTaskInfo","user","Nav","to","UsersActionsType","auth","provider","GithubAuthProvider","Auth","signInWithPopup","signOut","App","admin","setAdmin","dispatch","useDispatch","onAuthStateChanged","profile","payload","description","type","SET_TASKS","learningFlow","SET_USERS","exact","path","signIn","produce","draft","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a4a6d171.chunk.js","sourcesContent":["const firebaseConfig = {\r\n  apiKey: \"AIzaSyB8bzdzxrTeMg3yFk83R2gMVHk0Zrh1GI0\",\r\n  authDomain: \"daron-b15b1.firebaseapp.com\",\r\n  databaseURL: \"https://daron-b15b1.firebaseio.com\",\r\n  projectId: \"daron-b15b1\",\r\n  storageBucket: \"daron-b15b1.appspot.com\",\r\n  messagingSenderId: \"875304473033\",\r\n  appId: \"1:875304473033:web:b0697833a48537eff41818\"\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig)\r\n} else {\r\n  firebase.app()\r\n}\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst usersRef = db.collection('users');\r\nconst tasksRef = db.collection('tasks');\r\nconst messagesRef = db.collection('messages');\r\nconst lessonRef = db.collection(\"lesson\");\r\nconst resourcesRef = db.collection(\"resources\");\r\n\r\nexport { lessonRef, tasksRef, firebase, usersRef, resourcesRef, messagesRef };\r\n\r\n","import React from 'react';\r\nimport { resourcesRef, firebase } from '../../firebase';\r\nimport Markdown from 'react-markdown';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst AdminResources = () => {\r\n  const [resources, setResources] = React.useState<any>([]);\r\n  const [deleteCollection, setDeleteCollection] = React.useState<string>('');\r\n  const [resourcesTitle, setResourcesTitle] = React.useState<any>([]);\r\n  const [resourcesTitleId, setResourcesTitleId] = React.useState<string>('');\r\n  const [resourcesItems, setResourcesItems] = React.useState<any>([]);\r\n  const [itemResources, setItemResources] = React.useState<string>('');\r\n  const [collectionValue, setCollectionValue] = React.useState<string>('');\r\n  const [subcollectionTitle, setSubcollectionTitle] = React.useState<string>('');\r\n  const [subcollectionText, setSubcollectionText] = React.useState<string>('');\r\n  const [changeSubcollectionTitle, setChangeSubcollectionTitle] = React.useState<string>('');\r\n  const [changeSubcollectionText, setChangeSubcollectionText] = React.useState<string>('');\r\n\r\n  React.useEffect(() => {\r\n    resourcesRef.onSnapshot(function (snapshot) {\r\n      const items: any = [];\r\n\r\n      snapshot.forEach(function (doc: any) {\r\n        const objKey: any = [];\r\n        for (var key in doc.data()) {\r\n          objKey.push(doc.data()[key]);\r\n        }\r\n        items.push({\r\n          id: doc.id,\r\n          title: objKey,\r\n        });\r\n      });\r\n      setResources(items);\r\n    });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (!!resourcesItems.length) {\r\n      setChangeSubcollectionText(resourcesItems[0].text);\r\n      setChangeSubcollectionTitle(resourcesItems[0].title);\r\n    }\r\n  }, [resourcesItems]);\r\n\r\n  const onGetResourcesTitle = (id: any) => {\r\n    setItemResources('');\r\n    setResourcesItems([]);\r\n    setResourcesTitleId(id);\r\n    resourcesRef.doc(id).onSnapshot(function (doc) {\r\n      const objKey: any = [];\r\n      for (var key in doc.data()) {\r\n        objKey.push(key);\r\n      }\r\n      setResourcesTitle(objKey);\r\n    });\r\n  };\r\n\r\n  const onGetResourcesItems = (item: any) => {\r\n    setItemResources(item);\r\n    resourcesRef\r\n      .doc(resourcesTitleId)\r\n      .get()\r\n      .then(function (doc: any) {\r\n        if (doc.exists) {\r\n          setResourcesItems([doc.data()[item]]);\r\n        } else {\r\n          console.log('No such document!');\r\n        }\r\n      });\r\n  };\r\n\r\n  const onAddCollection = () => {\r\n    resourcesRef.doc(collectionValue).set({});\r\n    setCollectionValue('');\r\n  };\r\n\r\n  const onAddSubcollection = () => {\r\n    resourcesRef.doc(resourcesTitleId).set(\r\n      {\r\n        [subcollectionTitle]: {\r\n          title: subcollectionTitle,\r\n          text: subcollectionText,\r\n        },\r\n      },\r\n      { merge: true }\r\n    );\r\n    setSubcollectionTitle('');\r\n    setSubcollectionText('');\r\n  };\r\n\r\n  const onChangeSubcollection = () => {\r\n    resourcesRef.doc(resourcesTitleId).update({\r\n      [itemResources]: firebase.firestore.FieldValue.delete(),\r\n    });\r\n\r\n    resourcesRef.doc(resourcesTitleId).set(\r\n      {\r\n        [changeSubcollectionTitle]: {\r\n          title: changeSubcollectionTitle,\r\n          text: changeSubcollectionText,\r\n        },\r\n      },\r\n      { merge: true }\r\n    );\r\n    setResourcesItems([\r\n      {\r\n        title: changeSubcollectionTitle,\r\n        text: changeSubcollectionText,\r\n      },\r\n    ]);\r\n    setItemResources(changeSubcollectionTitle);\r\n  };\r\n\r\n  const onDeleteResourcesItem = (id: any) => {\r\n    resourcesRef.doc(resourcesTitleId).update({\r\n      [itemResources]: firebase.firestore.FieldValue.delete(),\r\n    });\r\n    setResourcesItems([]);\r\n    setItemResources('');\r\n  };\r\n\r\n  const onDeleteCollection = () => {\r\n    resourcesRef\r\n      .doc(deleteCollection)\r\n      .get()\r\n      .then((doc: any) => {\r\n        if (doc.exists) {\r\n          resourcesRef\r\n            .doc(deleteCollection)\r\n            .delete()\r\n            .then(function () {\r\n              console.log('Document successfully deleted!');\r\n            })\r\n            .catch(function (error) {\r\n              console.error('Error removing document: ', error);\r\n            });\r\n          setResourcesTitleId('');\r\n          setResourcesItems([]);\r\n        } else {\r\n          alert('Такой коллекции не существует');\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleAddCollection = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setCollectionValue(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleAddSubcollectionTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSubcollectionTitle(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleAddSubcollectionText = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setSubcollectionText(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleChangeSubcollectionTitle = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setChangeSubcollectionTitle(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleChangeSubcollectionText = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setChangeSubcollectionText(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleDeleteCollection = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setDeleteCollection(String(event.target.value) || '');\r\n  };\r\n\r\n  const onClearFormSubcollection = () => {\r\n    setSubcollectionTitle('');\r\n    setSubcollectionText('');\r\n  };\r\n  const onReturnFormSubcollection = () => {\r\n    setChangeSubcollectionTitle(resourcesItems[0].title);\r\n    setChangeSubcollectionText(resourcesItems[0].text);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin_resources\">\r\n      <div className=\"admin_resources__title\">\r\n        <div className=\"admin_resources__accordion\">\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Добавить коллекцию</Typography>\r\n            </AccordionSummary>\r\n\r\n            <div style={{ padding: 15 }}>\r\n              <div>\r\n                <TextField\r\n                  value={collectionValue}\r\n                  onChange={handleAddCollection}\r\n                  fullWidth\r\n                  label=\"Назовите коллекцию\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </div>\r\n              <div className=\"admin_resources__accordion--btn\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setCollectionValue('')}\r\n                >\r\n                  Отмена\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={onAddCollection}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disabled={!collectionValue}\r\n                >\r\n                  Добавить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Accordion>\r\n        </div>\r\n        <div className=\"admin_resources__title__nav\">\r\n          {resources.map((item: any) => (\r\n            <div key={item.id}>\r\n              <Button onClick={() => onGetResourcesTitle(item.id)} fullWidth color=\"secondary\">\r\n                {item.id}\r\n              </Button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h2>Удаление коллекции</h2>\r\n          <TextField\r\n            value={deleteCollection}\r\n            onChange={handleDeleteCollection}\r\n            fullWidth\r\n            label=\"Название коллекции\"\r\n            variant=\"outlined\"\r\n          />\r\n          <Button\r\n            disabled={!deleteCollection}\r\n            onClick={onDeleteCollection}\r\n            fullWidth\r\n            color=\"secondary\"\r\n          >\r\n            Удалить коллекцию\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"admin_resources__items\">\r\n        <div className=\"admin_resources__accordion\">\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Добавить подколлекцию</Typography>\r\n            </AccordionSummary>\r\n\r\n            <div style={{ padding: 15 }}>\r\n              {!!resourcesTitleId ? (\r\n                <div>\r\n                  <div style={{ paddingBottom: 10 }}>Коллекция: {resourcesTitleId}</div>\r\n                  <div>\r\n                    <TextField\r\n                      value={subcollectionTitle}\r\n                      onChange={handleAddSubcollectionTitle}\r\n                      fullWidth\r\n                      label=\"Title - название подколлекции\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                    <TextField\r\n                      value={subcollectionText}\r\n                      onChange={handleAddSubcollectionText}\r\n                      fullWidth\r\n                      placeholder=\"Поделитесь знаниями, сенсей\"\r\n                      multiline\r\n                      label=\"Текст - контент урока\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"admin_resources__accordion--btn\">\r\n                    <Button\r\n                      onClick={onClearFormSubcollection}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      Отмена\r\n                    </Button>\r\n\r\n                    <Button\r\n                      onClick={onAddSubcollection}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      disabled={!subcollectionTitle}\r\n                    >\r\n                      Добавить\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>Вы ещё не выбрали коллекцию</div>\r\n              )}\r\n            </div>\r\n          </Accordion>\r\n        </div>\r\n        {resourcesTitle.map((item: any) => (\r\n          <div key={item}>\r\n            <Button onClick={() => onGetResourcesItems(item)} fullWidth color=\"primary\">\r\n              {item}\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"admin_resources__content\">\r\n        <div className=\"admin_resources__accordion\">\r\n          <Accordion>\r\n            <AccordionSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <Typography>Редактировать подколлекцию</Typography>\r\n            </AccordionSummary>\r\n\r\n            <div style={{ padding: 15 }}>\r\n              {!!resourcesItems.length ? (\r\n                <div>\r\n                  <div style={{ paddingBottom: 10 }}>Коллекция: {resourcesItems[0].title}</div>\r\n                  <div>\r\n                    <TextField\r\n                      value={changeSubcollectionTitle}\r\n                      onChange={handleChangeSubcollectionTitle}\r\n                      fullWidth\r\n                      label=\"Title - название подколлекции\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ marginTop: 30 }}>\r\n                    <TextField\r\n                      value={changeSubcollectionText}\r\n                      onChange={handleChangeSubcollectionText}\r\n                      fullWidth\r\n                      placeholder=\"Поделитесь знаниями, сенсей\"\r\n                      multiline\r\n                      label=\"Текст - контент урока\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"admin_resources__accordion--btn\">\r\n                    <Button\r\n                      onClick={onReturnFormSubcollection}\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                    >\r\n                      Отмена\r\n                    </Button>\r\n\r\n                    <Button onClick={onChangeSubcollection} variant=\"contained\" color=\"secondary\">\r\n                      Редактировать\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div>Вы ещё не выбрали подколлекцию</div>\r\n              )}\r\n            </div>\r\n          </Accordion>\r\n        </div>\r\n        {!!resourcesItems.length && (\r\n          <div key={resourcesItems[0].title} className=\"admin_resources__content__wrapper\">\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <h2>{resourcesItems[0].title}</h2>\r\n              <Button\r\n                onClick={() => onDeleteResourcesItem(resourcesItems[0].title)}\r\n                color=\"secondary\"\r\n              >\r\n                Delete\r\n              </Button>\r\n            </div>\r\n            <div>\r\n              <Markdown source={resourcesItems[0].text} />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminResources;\r\n","import React from 'react';\r\nimport { lessonRef } from '../../firebase';\r\n\r\nimport { Button, IconButton, InputBase, Snackbar, TextField } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst AdminLesson = () => {\r\n  const [lesson, setLesson] = React.useState<any>([]);\r\n  const [lessonNumber, setLessonNumber] = React.useState<string | undefined>('');\r\n  const [newLesson, setNewLesson] = React.useState<string>('');\r\n  const [lessonVideoPath, setLessonVideoPath] = React.useState<string | undefined>('');\r\n  const [lessonText, setLessonText] = React.useState<string>('');\r\n  const [openSnackbar, setOpenSnackbar] = React.useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    lessonRef.onSnapshot(function (snapshot) {\r\n      const items: any = [];\r\n      setNewLesson(String(snapshot.docs.length + 1));\r\n\r\n      snapshot.forEach(function (doc: any) {\r\n        items.push({\r\n          number: doc.data().number,\r\n          text: doc.data().text,\r\n          videoPath: doc.data().videoPath,\r\n        });\r\n      });\r\n      setLesson(items);\r\n    });\r\n  }, []);\r\n\r\n  const onGetCurrentLesson = (id: string) => {\r\n    const item = lesson.find((el: any) => el.number === id);\r\n\r\n    setLessonNumber(item.number);\r\n    setLessonVideoPath(item.videoPath);\r\n    setLessonText(item.text);\r\n  };\r\n\r\n  const onNewLesson = () => {\r\n    setLessonNumber(newLesson);\r\n    setLessonVideoPath('');\r\n    setLessonText('');\r\n  };\r\n\r\n  const onAddNewLesson = () => {\r\n    if (lessonRef) {\r\n      lessonRef.doc(lessonNumber).set({\r\n        number: lessonNumber,\r\n        text: lessonText,\r\n        videoPath: lessonVideoPath,\r\n        newLesson: true,\r\n      });\r\n    }\r\n\r\n    setLessonText('');\r\n    setLessonNumber('');\r\n    setLessonVideoPath('');\r\n    setOpenSnackbar(true);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLessonText(event.target.value);\r\n  };\r\n\r\n  const handleChangeLessonNumber = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setLessonNumber(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleChangeLessonVideoPath = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setLessonVideoPath(String(event.target.value) || '');\r\n  };\r\n\r\n  const handleCloseSnackbar = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenSnackbar(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin__lesson\">\r\n      <div className=\"admin__lesson__nav\">\r\n        <nav>\r\n          <ul>\r\n            <li className=\"admin__lesson__nav__item--first\">\r\n              <Button onClick={onNewLesson} color=\"secondary\" variant=\"outlined\">\r\n                New lesson\r\n              </Button>\r\n            </li>\r\n            {!!lesson.length &&\r\n              lesson.map((item: any) => {\r\n                return (\r\n                  <li key={item.number}>\r\n                    <Button\r\n                      onClick={() => onGetCurrentLesson(item.number)}\r\n                      color=\"secondary\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      Lesson №{item.number}\r\n                    </Button>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"admin__lesson__content\">\r\n        <div className=\"admin__lesson__content\">\r\n          <div style={{ display: 'flex' }}>\r\n            <div className=\"admin__lesson__textField\">\r\n              <TextField\r\n                value={lessonNumber}\r\n                onChange={handleChangeLessonNumber}\r\n                label=\"Lesson Number\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n            <div className=\"admin__lesson__textField\">\r\n              <TextField\r\n                style={{ width: 770 }}\r\n                value={lessonVideoPath}\r\n                onChange={handleChangeLessonVideoPath}\r\n                label=\"Lesson Video Path\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin__message__button\">\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={lessonText.length === 0 || !lessonNumber || !lessonVideoPath}\r\n              variant=\"contained\"\r\n              onClick={onAddNewLesson}\r\n            >\r\n              Отправить\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"admin__lesson__field\">\r\n          <InputBase\r\n            className=\"scrollbar\"\r\n            value={lessonText}\r\n            onChange={handleChange}\r\n            fullWidth\r\n            inputProps={{ 'aria-label': 'naked' }}\r\n            multiline\r\n            placeholder=\"Используйте язык разметки - Markdown\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={openSnackbar}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseSnackbar}\r\n        message=\"Урок добавлен\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleCloseSnackbar}>\r\n              Скрыть\r\n            </Button>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={handleCloseSnackbar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLesson;\r\n","import React from 'react';\r\nimport { Avatar, Button } from '@material-ui/core';\r\nimport { format } from 'date-fns';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { messagesRef } from '../firebase';\r\nconst TaskMessages = ({ message, setOpen, setTaskId, newMessage }: any) => {\r\n  const onDeleteMessage = (id: any) => {\r\n    messagesRef.doc(id).delete();\r\n  };\r\n\r\n  const openModal = () => {\r\n    setTaskId(message.taskId);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin__message__item\">\r\n      <div className=\"admin__message__user\">\r\n        <div className=\"admin__message__user--info\">\r\n          <Avatar\r\n            className=\"admin__message__avatar\"\r\n            alt=\"user avatar\"\r\n            src={message.profilePicUrl || undefined}\r\n          />\r\n          <div className=\"admin__message__title\">\r\n            <span className=\"admin__message__name\">{message.name}</span>\r\n            <span className=\"admin__message__info\">\r\n              Отправлено {format(message.createdAt.toDate(), 'dd.MM.yyyy, в HH.mm.ss')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {newMessage ? (\r\n            <Button onClick={openModal}>Перейти в диалог</Button>\r\n          ) : (\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => onDeleteMessage(message.messageId)}\r\n              startIcon={<DeleteIcon />}\r\n            >\r\n              DELETE\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"admin__message__item-text\">\r\n        <ReactMarkdown source={message.text} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskMessages;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { messagesRef, tasksRef } from '../firebase';\r\nimport TaskMessages from './TaskMessages';\r\nimport { Avatar, Icon, InputBase } from '@material-ui/core';\r\nimport { ADMIN_ID, ADMIN_AVATAR, ADMIN_NAME } from '../App';\r\nimport { format } from 'date-fns';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nexport default function DialogModal({ taskId, open, setOpen }: any) {\r\n  const [value, setValue] = React.useState('');\r\n  const [messagesTask, setMessagesTask] = React.useState([]);\r\n  const [currentTask, setCurrentTask] = React.useState<any>([]);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      messagesRef\r\n        .where('taskId', '==', taskId)\r\n        .orderBy('createdAt', 'asc')\r\n        .onSnapshot(function (querySnapshot: any) {\r\n          const message: any = [];\r\n          querySnapshot.forEach(function (doc: any) {\r\n            message.push({\r\n              ...doc.data(),\r\n              messageId: doc.id,\r\n            });\r\n          });\r\n          setMessagesTask(message);\r\n        });\r\n\r\n      tasksRef\r\n        .doc(taskId)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            setCurrentTask(doc.data());\r\n          }\r\n        });\r\n    }\r\n  }, [open]);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    messagesRef\r\n      .where('taskId', '==', taskId)\r\n      .where('uid', '!=', ADMIN_ID)\r\n      .where('newMessage', '==', true)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n          messagesRef.doc(doc.id).update({\r\n            newMessage: false,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  const onAddMessage = () => {\r\n    if (!!value) {\r\n      messagesRef.add({\r\n        name: ADMIN_NAME,\r\n        text: value,\r\n        profilePicUrl: ADMIN_AVATAR,\r\n        createdAt: new Date(),\r\n        newMessage: true,\r\n        uid: ADMIN_ID,\r\n        taskId: taskId,\r\n      });\r\n    }\r\n    setValue('');\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\r\n    if (!event.shiftKey && event.key === 'Enter') {\r\n      onAddMessage();\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"lg\"\r\n        scroll=\"body\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogContent>\r\n          <div className={`admin__table__content--task admin__${currentTask.status}`}>\r\n            <h2>Задание №{currentTask.number}</h2>\r\n            <div className=\"admin__table__content--messages--info\">\r\n              <p className=\"admin__decision-link\">\r\n                <b>Ссылка на pull-реквест: </b>\r\n                <a href={currentTask.reference} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  {currentTask.reference}\r\n                </a>\r\n              </p>\r\n              <div className=\"admin__decision\">\r\n                <b>Закреплённые комментарии:</b>\r\n                {!!currentTask.decision &&\r\n                  currentTask.decision.map((item: any) => {\r\n                    return (\r\n                      <div>\r\n                        <div className=\"admin__message__user\">\r\n                          <div className=\"admin__message__user--info\">\r\n                            <Avatar\r\n                              className=\"admin__message__avatar\"\r\n                              alt=\"user avatar\"\r\n                              src={item.avatar || undefined}\r\n                            />\r\n                            <div className=\"admin__message__title\">\r\n                              <span className=\"admin__message__name\">{item.name}</span>\r\n                              <span className=\"admin__message__info\">\r\n                                Отправлено{' '}\r\n                                {format(item.createdAt.toDate(), 'dd.MM.yyyy, в HH.mm.ss')}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"admin__message__item-text\">\r\n                          <ReactMarkdown source={item.text} />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {!!messagesTask.length &&\r\n            messagesTask.map((message: any) => (\r\n              <TaskMessages key={message.messageId} message={message} newMessages={false} />\r\n            ))}\r\n\r\n          <div className=\"admin__message__chat\">\r\n            <div className=\"admin__message__chat-field\">\r\n              <InputBase\r\n                className=\"scrollbar\"\r\n                rows={4}\r\n                rowsMax={10}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onKeyUp={handleKeyUp}\r\n                fullWidth\r\n                inputProps={{ 'aria-label': 'naked' }}\r\n                multiline\r\n                placeholder=\"Комментарий\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"admin__message__button\">\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={value.length === 0}\r\n                variant=\"contained\"\r\n                onClick={onAddMessage}\r\n                endIcon={<Icon>send</Icon>}\r\n              >\r\n                Отправить\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { ADMIN_ID } from '../App';\r\nimport { messagesRef } from '../firebase';\r\nimport TaskMessages from './TaskMessages';\r\n\r\nconst NewMessages = ({ setTaskId, setOpen }: any) => {\r\n  const [newMessages, setNewMessages] = React.useState<any>([]);\r\n\r\n  React.useEffect(() => {\r\n    messagesRef\r\n      .where('newMessage', '==', true)\r\n      .where('uid', '!=', ADMIN_ID)\r\n      .orderBy('uid', 'asc')\r\n      .orderBy('createdAt', 'asc')\r\n      .onSnapshot(function (querySnapshot: any) {\r\n        const message: any = [];\r\n        querySnapshot.forEach(function (doc: any) {\r\n          message.push({\r\n            ...doc.data(),\r\n            messageId: doc.id,\r\n          });\r\n        });\r\n        setNewMessages(message);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin__table__content--messages scrollbar\">\r\n      <h2 style={{ position: 'sticky', top: 0, backgroundColor: '#fff', zIndex: 500 }}>\r\n        Непрочитанных сообщений: {newMessages.length}\r\n      </h2>\r\n      {!!newMessages.length &&\r\n        newMessages.map((message: { messageId: string }) => {\r\n          return (\r\n            <TaskMessages\r\n              key={message.messageId}\r\n              setOpen={setOpen}\r\n              setTaskId={setTaskId}\r\n              message={message}\r\n              newMessage={true}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessages;\r\n","import { Action } from \"redux\";\r\n\r\nexport enum TasksActionsType {\r\n  SET_TASKS = 'tasks/SET_TASKS'\r\n}\r\n\r\nexport interface ITask {\r\n  status: 'completed' | 'rejected' | 'pending';\r\n  taskId: string;\r\n  number: number;\r\n  createdAt: Date;\r\n  responseAt?: Date;\r\n  newTask: boolean;\r\n  description?: string;\r\n  reference?: string;\r\n  uid: string;\r\n}\r\n\r\n\r\nexport interface ITasksState {\r\n  items: ITask[];\r\n}\r\n\r\nexport interface ISetTasksActionInterface extends Action<TasksActionsType> {\r\n  type: TasksActionsType.SET_TASKS;\r\n  payload: ITasksState['items'];\r\n}\r\n\r\nexport type TasksActions = | ISetTasksActionInterface;\r\n","import { Immutable } from \"immer\";\r\nimport { RootState } from \"../store\";\r\nimport { ITasksState } from \"./types\";\r\n\r\nexport const selectTasks = (state: RootState): Immutable<ITasksState> => state.tasks;\r\n\r\nexport const selectTasksItems = (state: RootState): Immutable<ITasksState['items']> => selectTasks(state).items;","import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { tasksRef, messagesRef, firebase } from '../firebase';\r\n\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Badge,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputBase,\r\n  InputLabel,\r\n  Modal,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport { ADMIN_AVATAR, ADMIN_NAME } from '../App';\r\n\r\nconst TaskItem = ({\r\n  taskCurrentUser,\r\n  setUserMessages,\r\n  setCurrentTaskInfo,\r\n  setOpen,\r\n  setTaskId,\r\n  tasksPending,\r\n}: any) => {\r\n  const [valueModal, setValueModal] = React.useState<any>('');\r\n  const [openModal, setOpenModal] = React.useState<any>(false);\r\n  const [statusTask, setStatusTask] = React.useState<any>();\r\n\r\n  const onDeleteTask = () => {\r\n    tasksRef.doc(taskCurrentUser.taskId).delete();\r\n    messagesRef\r\n      .where('taskId', '==', taskCurrentUser.taskId)\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          doc.ref.delete();\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setValueModal('');\r\n  };\r\n\r\n  const handleOpenModal = () => {\r\n    setValueModal('');\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const onAddTask = (status: string) => {\r\n    console.log(taskCurrentUser);\r\n    tasksRef.doc(taskCurrentUser.taskId).update({\r\n      status,\r\n      decision: firebase.firestore.FieldValue.arrayUnion({\r\n        text: valueModal,\r\n        avatar: ADMIN_AVATAR,\r\n        name: ADMIN_NAME,\r\n        createdAt: new Date(),\r\n      }),\r\n      newTask: true,\r\n      responseAt: new Date(),\r\n    });\r\n\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onGetMessages = () => {\r\n    setCurrentTaskInfo(taskCurrentUser);\r\n\r\n    messagesRef\r\n      .where('taskId', '==', taskCurrentUser.taskId)\r\n      .orderBy('createdAt', 'asc')\r\n      .onSnapshot(function (querySnapshot: any) {\r\n        const messages: any[] = [];\r\n        querySnapshot.forEach(function (doc: any) {\r\n          messages.push({\r\n            ...doc.data(),\r\n            messageId: doc.id,\r\n          });\r\n        });\r\n        setUserMessages(messages);\r\n      });\r\n  };\r\n\r\n  const onOpenModalPendingTask = () => {\r\n    setTaskId(taskCurrentUser.taskId);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeModal = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValueModal(event.target.value);\r\n  };\r\n\r\n  const handleChangeStatusTask = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setStatusTask(String(event.target.value) || '');\r\n  };\r\n\r\n  return (\r\n    <div className={`admin__table__content--task admin__${taskCurrentUser.status}`}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <div>\r\n          <span style={{ fontWeight: 500, fontSize: 24 }}>{taskCurrentUser.status}</span>\r\n          <span\r\n            style={{\r\n              color: 'gray',\r\n              fontWeight: 500,\r\n              fontSize: 19,\r\n              paddingLeft: 10,\r\n            }}\r\n          >\r\n            {format(taskCurrentUser.createdAt.toDate(), 'dd.MM.yyyy - HH:mm')}\r\n          </span>\r\n        </div>\r\n        <span style={{ fontWeight: 600, fontSize: 24 }}>{'Урок №' + taskCurrentUser.number}</span>\r\n\r\n        {taskCurrentUser.status === 'pending' && (\r\n          <div>\r\n            <Button onClick={handleOpenModal} variant=\"outlined\" color=\"secondary\">\r\n              решение\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <p>Ссылка на гитхаб:{taskCurrentUser.reference}</p>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        {tasksPending ? (\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onOpenModalPendingTask}>\r\n            Сообщения\r\n            <Badge\r\n              style={{ color: 'grey', marginLeft: 5 }}\r\n              color=\"secondary\"\r\n              badgeContent={0}\r\n              variant=\"dot\"\r\n            >\r\n              <MailIcon />\r\n            </Badge>\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"contained\" color=\"primary\" onClick={onGetMessages}>\r\n            Сообщения\r\n            <Badge\r\n              style={{ color: 'grey', marginLeft: 5 }}\r\n              color=\"secondary\"\r\n              badgeContent={0}\r\n              variant=\"dot\"\r\n            >\r\n              <MailIcon />\r\n            </Badge>\r\n          </Button>\r\n        )}\r\n\r\n        <Button color=\"secondary\" onClick={onDeleteTask} startIcon={<DeleteIcon />}>\r\n          DELETE\r\n        </Button>\r\n      </div>\r\n\r\n      <Modal\r\n        className=\"admin_activities__modal\"\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        <div className=\"item-wrapper admin__modal\">\r\n          <FormControl className=\"admin_activities__formControl\">\r\n            <InputLabel htmlFor=\"demo-dialog-native\">Решение</InputLabel>\r\n            <Select\r\n              native\r\n              value={statusTask}\r\n              onChange={handleChangeStatusTask}\r\n              input={<Input id=\"demo-dialog-native\" />}\r\n            >\r\n              <option aria-label=\"None\" value=\"\" />\r\n              <option value=\"completed\">Выполнено</option>\r\n              <option value=\"rejected\">Отклонено</option>\r\n            </Select>\r\n          </FormControl>\r\n          <p>Комментарий: </p>\r\n          <div className=\"admin__modal-field\">\r\n            <InputBase\r\n              className=\"scrollbar\"\r\n              rows={8}\r\n              value={valueModal}\r\n              onChange={handleChangeModal}\r\n              fullWidth\r\n              inputProps={{ 'aria-label': 'naked' }}\r\n              multiline\r\n              placeholder=\"Комментарий\"\r\n            />\r\n          </div>\r\n          <div className=\"admin__modal-button\">\r\n            <div className=\"button--cancel\">\r\n              <Button onClick={handleCloseModal} variant=\"contained\">\r\n                Отмена\r\n              </Button>\r\n            </div>\r\n            <div className=\"button--send\">\r\n              <Button\r\n                onClick={() => onAddTask(statusTask)}\r\n                disabled={!statusTask}\r\n                variant=\"contained\"\r\n              >\r\n                Отправить\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTasksItems } from '../redux/tasks/selectors';\r\nimport { ITask } from '../redux/tasks/types';\r\nimport TaskItem from './TaskItem';\r\n\r\nconst TasksPending = ({ setOpen, setTaskId }: any) => {\r\n  const [tasksPending, setTasksPending] = React.useState<ITask[]>([]);\r\n  const tasks = useSelector(selectTasksItems);\r\n\r\n  React.useEffect(() => {\r\n    setTasksPending(tasks.filter((el) => el.status === 'pending'));\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <div className=\"admin__table__content--tasks scrollbar\">\r\n      <h2 style={{ position: 'sticky', top: 0, backgroundColor: '#fff', zIndex: 500 }}>\r\n        Количество тасков в ожидании: {tasksPending.length}\r\n      </h2>\r\n\r\n      {!!tasksPending.length &&\r\n        tasksPending.map((task: any) => {\r\n          return (\r\n            <TaskItem\r\n              key={task.taskId}\r\n              tasksPending={true}\r\n              setTaskId={setTaskId}\r\n              setOpen={setOpen}\r\n              taskCurrentUser={task}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksPending;\r\n","import { Immutable } from \"immer\";\r\nimport { RootState } from \"../store\";\r\nimport { IUsersState } from \"./types\";\r\n\r\nexport const selectUsers = (state: RootState): Immutable<IUsersState> => state.users;\r\n\r\nexport const selectUsersItems = (state: RootState): Immutable<IUsersState['items']> => selectUsers(state).items;","import React from 'react';\r\nimport { Avatar, Chip } from '@material-ui/core';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { usersRef } from '../firebase';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUsersItems } from '../redux/users/selectors';\r\nimport { IUser } from '../redux/users/types';\r\n\r\nconst TransferUsers = () => {\r\n  const [usersNotPaid, setUsersNotPaid] = React.useState<IUser[]>([]);\r\n  const [usersPaid, setUsersPaid] = React.useState<IUser[]>([]);\r\n\r\n  const users = useSelector(selectUsersItems);\r\n  React.useEffect(() => {\r\n    setUsersNotPaid(users.filter((el) => el.accepted === false));\r\n    setUsersPaid(users.filter((el) => el.accepted === true));\r\n  }, [users]);\r\n\r\n  const transferUsers = (item: IUser) => {\r\n    if (item.accepted) {\r\n      usersRef.doc(item.uid).update({\r\n        accepted: false,\r\n      });\r\n    }\r\n    if (!item.accepted) {\r\n      usersRef.doc(item.uid).update({\r\n        accepted: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  if (!users) {\r\n    return <div>Грузим, грузим...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin__users\">\r\n      <div className=\"admin__users__auth\">\r\n        <h2>Не оплатившие курс ({usersNotPaid.length}):</h2>\r\n        <div className=\"admin__users__list\">\r\n          {!usersNotPaid.length ? (\r\n            <div>Кажись пусто...</div>\r\n          ) : (\r\n            usersNotPaid.map((item) => (\r\n              <div key={item.uid} className=\"admin__users__list__item\">\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  label={item.displayName || item.email || item.uid}\r\n                  color=\"secondary\"\r\n                  avatar={<Avatar src={item.photoURL} />}\r\n                />\r\n                <IconButton onClick={() => transferUsers(item)}>\r\n                  <ArrowForwardIosIcon />\r\n                </IconButton>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"admin__users__accepted\">\r\n        <h2> Оплатившие курс ({usersPaid.length}):</h2>\r\n        <div className=\"admin__users__list__accepted\">\r\n          {!usersPaid.length ? (\r\n            <div>Кажись пусто...</div>\r\n          ) : (\r\n            usersPaid.map((item) => (\r\n              <div key={item.uid} className=\"admin__users__list__item\">\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  label={item.displayName || item.email}\r\n                  color=\"secondary\"\r\n                  avatar={<Avatar src={item.photoURL} />}\r\n                />\r\n                <IconButton onClick={() => transferUsers(item)}>\r\n                  <ArrowForwardIosIcon />\r\n                </IconButton>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransferUsers;\r\n","import React from 'react';\r\nimport DialogModal from '../../components/DialogModal';\r\nimport NewMessages from '../../components/NewMessages';\r\nimport TasksPending from '../../components/TasksPending';\r\nimport TransferUsers from '../../components/TransferUsers';\r\n\r\nconst News = () => {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const [taskId, setTaskId] = React.useState<string | undefined>();\r\n\r\n  return (\r\n    <>\r\n      <TransferUsers />\r\n      <div className=\"admin__table__content\">\r\n        <TasksPending setTaskId={setTaskId} setOpen={setOpen} />\r\n        <NewMessages setTaskId={setTaskId} setOpen={setOpen} />\r\n        <DialogModal open={open} setOpen={setOpen} taskId={taskId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport { tasksRef, messagesRef } from '../../firebase';\r\nimport { Avatar, Button, Icon, InputBase } from '@material-ui/core';\r\nimport TaskItem from '../../components/TaskItem';\r\nimport TaskMessages from '../../components/TaskMessages';\r\nimport { ADMIN_AVATAR, ADMIN_ID, ADMIN_NAME } from '../../App';\r\nimport { selectUsersItems } from '../../redux/users/selectors';\r\nimport { useSelector } from 'react-redux';\r\nimport { ITask } from '../../redux/tasks/types';\r\nimport { format } from 'date-fns';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst AdminActivities = () => {\r\n  const [userTasks, setUserTasks] = React.useState<ITask[]>([]);\r\n  const [userMessages, setUserMessages] = React.useState<any[]>([]);\r\n  const [currentTaskInfo, setCurrentTaskInfo] = React.useState<any>();\r\n  const [value, setValue] = React.useState<string>('');\r\n  const users = useSelector(selectUsersItems);\r\n\r\n  const onGetUserTasks = (id: any) => {\r\n    setUserMessages([]);\r\n    setCurrentTaskInfo(undefined);\r\n\r\n    tasksRef\r\n      .where('uid', '==', id)\r\n      .orderBy('createdAt', 'asc')\r\n      .onSnapshot(function (querySnapshot) {\r\n        const items: ITask[] = [];\r\n        querySnapshot.forEach(function (doc: any) {\r\n          items.push({\r\n            ...doc.data(),\r\n            taskId: doc.id,\r\n          });\r\n        });\r\n        setUserTasks(items);\r\n      });\r\n  };\r\n  const onAddMessage = () => {\r\n    if (!!value) {\r\n      console.log(currentTaskInfo);\r\n      messagesRef.add({\r\n        name: ADMIN_NAME,\r\n        profilePicUrl: ADMIN_AVATAR,\r\n        uid: ADMIN_ID,\r\n        text: value,\r\n        createdAt: new Date(),\r\n        newMessage: true,\r\n        taskId: currentTaskInfo.taskId,\r\n      });\r\n    }\r\n    setValue('');\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLTextAreaElement>): void => {\r\n    if (!event.shiftKey && event.key === 'Enter') {\r\n      onAddMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"admin__table\">\r\n        <div className=\"admin__table__header\">\r\n          {users\r\n            .filter((user) => user.accepted)\r\n            .map((user) => {\r\n              return (\r\n                <div className=\"admin__table__header--item\" key={user.uid}>\r\n                  <Button\r\n                    startIcon={<Avatar src={user.photoURL || undefined} />}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => onGetUserTasks(user.uid)}\r\n                  >\r\n                    {user.displayName || user.email || user.uid}\r\n                  </Button>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"admin__table__content\">\r\n          <div className=\"admin__table__content--tasks scrollbar\">\r\n            {!!userTasks.length &&\r\n              userTasks.map((task: any) => {\r\n                return (\r\n                  <TaskItem\r\n                    key={task.taskId}\r\n                    taskCurrentUser={task}\r\n                    setUserMessages={setUserMessages}\r\n                    setCurrentTaskInfo={setCurrentTaskInfo}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n\r\n          <div className=\"admin__table__content--messages scrollbar\">\r\n            {currentTaskInfo && (\r\n              <div className=\"admin__table__content--messages--info\">\r\n                <p className=\"admin__decision-link\">\r\n                  <b>Ссылка на pull-реквест: </b>\r\n                  <a href={currentTaskInfo.reference} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                    {currentTaskInfo.reference}\r\n                  </a>\r\n                </p>\r\n                <div className=\"admin__decision\">\r\n                  <b>Закреплённые комментарии:</b>\r\n                  {currentTaskInfo.decision.map((item: any) => {\r\n                    return (\r\n                      <div>\r\n                        <div className=\"admin__message__user\">\r\n                          <div className=\"admin__message__user--info\">\r\n                            <Avatar\r\n                              className=\"admin__message__avatar\"\r\n                              alt=\"user avatar\"\r\n                              src={item.avatar || undefined}\r\n                            />\r\n                            <div className=\"admin__message__title\">\r\n                              <span className=\"admin__message__name\">{item.name}</span>\r\n                              <span className=\"admin__message__info\">\r\n                                Отправлено{' '}\r\n                                {format(item.createdAt.toDate(), 'dd.MM.yyyy, в HH.mm.ss')}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"admin__message__item-text\">\r\n                          <ReactMarkdown source={item.text} />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }) || 'Отсутствует'}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {!!userMessages.length &&\r\n              userMessages.map((message) => {\r\n                return (\r\n                  <TaskMessages key={message.messageId} newMessage={false} message={message} />\r\n                );\r\n              })}\r\n\r\n            {currentTaskInfo && (\r\n              <div className=\"admin__message__chat\">\r\n                <div className=\"admin__message__chat-field\">\r\n                  <InputBase\r\n                    className=\"scrollbar\"\r\n                    rows={4}\r\n                    rowsMax={10}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    onKeyUp={handleKeyUp}\r\n                    fullWidth\r\n                    inputProps={{ 'aria-label': 'naked' }}\r\n                    multiline\r\n                    placeholder=\"Комментарий\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"admin__message__button\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={value.length === 0 || !currentTaskInfo}\r\n                    variant=\"contained\"\r\n                    onClick={onAddMessage}\r\n                    endIcon={<Icon>send</Icon>}\r\n                  >\r\n                    Отправить\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminActivities;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className=\"admin__nav\">\r\n      <Link to=\"/\">\r\n        <Button>Новости</Button>\r\n      </Link>\r\n      <Link to=\"/users\">\r\n        <Button>Пользователи</Button>\r\n      </Link>\r\n      <Link to=\"/lesson\">\r\n        <Button>Видео уроки</Button>\r\n      </Link>\r\n      <Link to=\"/resources\">\r\n        <Button>Ресурсы</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { ISetTasksActionInterface, TasksActionsType, ITasksState } from \"./types\";\r\n\r\nexport const setTasks = (payload: ITasksState['items']): ISetTasksActionInterface => ({\r\n  type: TasksActionsType.SET_TASKS,\r\n  payload\r\n});","import { Action } from \"redux\";\r\n\r\nexport enum UsersActionsType {\r\n  SET_USERS = 'users/SET_USERS'\r\n}\r\n\r\nexport interface IUser {\r\n  accepted: boolean;\r\n  displayName?: string;\r\n  email?: string;\r\n  learningFlow: number;\r\n  photoURL?: string;\r\n  uid: string;\r\n}\r\n\r\nexport interface IUsersState {\r\n  items: IUser[]\r\n}\r\n\r\nexport interface ISetUsersActionInterface extends Action<UsersActionsType> {\r\n  type: UsersActionsType.SET_USERS;\r\n  payload: IUsersState['items'];\r\n}\r\n\r\nexport type UsersActions = | ISetUsersActionInterface;","import { ISetUsersActionInterface, UsersActionsType, IUsersState } from \"./types\";\r\n\r\nexport const setUsers = (payload: IUsersState['items']): ISetUsersActionInterface => ({\r\n  type: UsersActionsType.SET_USERS,\r\n  payload\r\n});","import { firebase } from './firebase';\r\n\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GithubAuthProvider();\r\n\r\nclass AuthProvider {\r\n  signIn() {\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  signOut() {\r\n    firebase.auth().signOut();\r\n  }\r\n}\r\n\r\nexport const Auth = new AuthProvider();\r\n\r\nexport {provider};","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport AdminResources from './pages/Resources';\r\nimport AdminLesson from './pages/Lesson';\r\nimport News from './pages/News';\r\nimport AdminActivities from './pages/Activities';\r\nimport Nav from './components/Nav';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { tasksRef, usersRef, firebase } from './firebase';\r\nimport { setTasks } from './redux/tasks/actions';\r\nimport { ITask } from './redux/tasks/types';\r\nimport { setUsers } from './redux/users/actions';\r\nimport { IUser } from './redux/users/types';\r\nimport { Auth } from './auth';\r\n\r\nexport const ADMIN_ID: string = '12086860';\r\nexport const ADMIN_NAME: string = 'Царевич';\r\nexport const ADMIN_AVATAR: string = 'https://avatars3.githubusercontent.com/u/12086860?v=4';\r\n\r\nexport default function App() {\r\n  const [admin, setAdmin] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(function (profile) {\r\n      if (profile) {\r\n        usersRef\r\n          .doc(profile.uid)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              setAdmin(doc.data()?.admin || false);\r\n            }\r\n          });\r\n      }\r\n    });\r\n\r\n    tasksRef.onSnapshot((querySnapshot) => {\r\n      const items: ITask[] = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push({\r\n          number: doc.data().number,\r\n          status: doc.data().status,\r\n          taskId: doc.id,\r\n          createdAt: doc.data().createdAt,\r\n          responseAt: doc.data()?.responseAt,\r\n          newTask: doc.data().newTask,\r\n          description: doc.data()?.description,\r\n          reference: doc.data()?.reference,\r\n          uid: doc.data().uid,\r\n        });\r\n      });\r\n      dispatch(setTasks(items));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    usersRef.onSnapshot((querySnapshot) => {\r\n      const user: IUser[] = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n        user.push({\r\n          accepted: doc.data().accepted,\r\n          displayName: doc.data()?.displayName,\r\n          email: doc.data()?.email,\r\n          learningFlow: doc.data().learningFlow,\r\n          photoURL: doc.data()?.photoURL,\r\n          uid: doc.data().uid,\r\n        });\r\n      });\r\n      dispatch(setUsers(user));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const handleSignInClick = () => {\r\n    Auth.signIn();\r\n  };\r\n\r\n  if (!admin) {\r\n    return (\r\n      <div className=\"signin__item\">\r\n        <h1>Вход в кабинет</h1>\r\n        <button onClick={handleSignInClick}>Войти через GitHub</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <Route exact path=\"/lesson\">\r\n        <AdminLesson />\r\n      </Route>\r\n      <Route exact path=\"/resources\">\r\n        <AdminResources />\r\n      </Route>\r\n      <Route exact path=\"/users\">\r\n        <AdminActivities />\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n        <News />\r\n      </Route>\r\n    </div>\r\n  );\r\n}\r\n","import produce, { Draft } from \"immer\";\r\nimport { TasksActions, TasksActionsType, ITasksState } from \"./types\";\r\n\r\nexport const initialTasksState: ITasksState = {\r\n  items: []\r\n}\r\n\r\nexport const tasks = produce(\r\n  (draft: Draft<ITasksState>, action: TasksActions) => {\r\n  switch (action.type) {\r\n    case TasksActionsType.SET_TASKS:\r\n      draft.items = action.payload;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }, initialTasksState\r\n)","import produce, { Draft } from \"immer\";\r\nimport { UsersActions, UsersActionsType, IUsersState } from \"./types\";\r\n\r\nexport const initialUsersState: IUsersState = {\r\n  items: []\r\n}\r\n\r\nexport const users = produce(\r\n  (draft: Draft<IUsersState>, action: UsersActions) => {\r\n  switch (action.type) {\r\n    case UsersActionsType.SET_USERS:\r\n      draft.items = action.payload;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }, initialUsersState\r\n)","import { combineReducers } from 'redux';\r\n\r\nimport { tasks } from './tasks/reducer'\r\nimport { users } from './users/reducer'\r\n// import { resources } from './resources/reducer';\r\n\r\n// export const rootReducer = combineReducers({ tasks, resources });\r\nexport const rootReducer = combineReducers({tasks, users});\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n// import { TasksState } from './activities/reducer';\r\n\r\nimport { rootReducer } from './rootReducer';\r\n\r\nexport type RootState = Omit<ReturnType<typeof rootReducer>, '$CombinedState'>;\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './assets/scss/main.scss';\r\nimport store from './redux/store';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}